{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "type": "rectangle",
      "version": 398,
      "versionNonce": 1109694911,
      "isDeleted": false,
      "id": "esvZJ8X3CRTYtpdjMpgDp",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 497.1263163074366,
      "y": 557.0967263937034,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#a5d8ff",
      "width": 818.009159317972,
      "height": 263.747573110437,
      "seed": 533265265,
      "groupIds": [
        "b_2SFtDVTr5O2uLm_2d0m"
      ],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [],
      "updated": 1696171349986,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 249,
      "versionNonce": 1398416817,
      "isDeleted": false,
      "id": "F9vsSX17QxTI8jkyHqZew",
      "fillStyle": "hachure",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 511.05686032189135,
      "y": 576.4705129489219,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffec99",
      "width": 790.1480712890625,
      "height": 225,
      "seed": 1508601887,
      "groupIds": [
        "b_2SFtDVTr5O2uLm_2d0m"
      ],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1696171349987,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "∗ Do you wonder what a CGI is?\n∗ Because you won’t call the CGI directly, use the full path as PATH_INFO.\n∗ Just remember that, for chunked request, your server needs to unchunk\nit, the CGI will expect EOF as end of the body.\n∗ Same things for the output of the CGI. If no content_length is returned\nfrom the CGI, EOF will mark the end of the returned data.\n∗ Your program should call the CGI with the file requested as first argument.\n∗ The CGI should be run in the correct directory for relative path file access.\n∗ Your server should work with one CGI (php-CGI, Python, and so forth).",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "∗ Do you wonder what a CGI is?\n∗ Because you won’t call the CGI directly, use the full path as PATH_INFO.\n∗ Just remember that, for chunked request, your server needs to unchunk\nit, the CGI will expect EOF as end of the body.\n∗ Same things for the output of the CGI. If no content_length is returned\nfrom the CGI, EOF will mark the end of the returned data.\n∗ Your program should call the CGI with the file requested as first argument.\n∗ The CGI should be run in the correct directory for relative path file access.\n∗ Your server should work with one CGI (php-CGI, Python, and so forth).",
      "lineHeight": 1.25,
      "baseline": 218
    },
    {
      "type": "text",
      "version": 188,
      "versionNonce": 1157556442,
      "isDeleted": false,
      "id": "kA3v2_kTpEAJg2oP_bvrk",
      "fillStyle": "hachure",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 497.1263162033242,
      "y": 46.612958810505205,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffec99",
      "width": 904.1993408203125,
      "height": 475,
      "seed": 117566695,
      "groupIds": [
        "SFWSYczR2Kjjiw59qqS9R"
      ],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1696334857527,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "• Choose the port and host of each ’server’. ✅\n• Setup the server_names or not. ✅\n• The first server for a host:port will be the default for this host:port (that means\nit will answer to all the requests that don’t belong to an other server). ❌ Check after ?\n• Setup default error pages.\n• Limit client body size.\n• Setup routes with one or multiple of the following rules/configuration (routes wont\nbe using regexp):\n◦ Define a list of accepted HTTP methods for the route.\n◦ Define a HTTP redirection.\n◦ Define a directory or a file from where the file should be searched (for example,\nif url /kapouet is rooted to /tmp/www, url /kapouet/pouic/toto/pouet is\n/tmp/www/pouic/toto/pouet).\n◦ Turn on or off directory listing.\n◦ Set a default file to answer if the request is a directory.\n◦ Execute CGI based on certain file extension (for example .php).\n◦ Make it work with POST and GET methods.\n◦ Make the route able to accept uploaded files and configure where they should\nbe saved.",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "• Choose the port and host of each ’server’. ✅\n• Setup the server_names or not. ✅\n• The first server for a host:port will be the default for this host:port (that means\nit will answer to all the requests that don’t belong to an other server). ❌ Check after ?\n• Setup default error pages.\n• Limit client body size.\n• Setup routes with one or multiple of the following rules/configuration (routes wont\nbe using regexp):\n◦ Define a list of accepted HTTP methods for the route.\n◦ Define a HTTP redirection.\n◦ Define a directory or a file from where the file should be searched (for example,\nif url /kapouet is rooted to /tmp/www, url /kapouet/pouic/toto/pouet is\n/tmp/www/pouic/toto/pouet).\n◦ Turn on or off directory listing.\n◦ Set a default file to answer if the request is a directory.\n◦ Execute CGI based on certain file extension (for example .php).\n◦ Make it work with POST and GET methods.\n◦ Make the route able to accept uploaded files and configure where they should\nbe saved.",
      "lineHeight": 1.25,
      "baseline": 468
    },
    {
      "type": "text",
      "version": 107,
      "versionNonce": 357320593,
      "isDeleted": false,
      "id": "RJRwniOhuNkhDjDfoTU5V",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 497.1263161504376,
      "y": -7.612642899829637,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#a5d8ff",
      "width": 233.96786499023438,
      "height": 35,
      "seed": 179909324,
      "groupIds": [
        "SFWSYczR2Kjjiw59qqS9R"
      ],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1696170885677,
      "link": null,
      "locked": false,
      "fontSize": 28,
      "fontFamily": 1,
      "text": "Configuration file",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Configuration file",
      "lineHeight": 1.25,
      "baseline": 25
    },
    {
      "type": "rectangle",
      "version": 351,
      "versionNonce": 760671464,
      "isDeleted": false,
      "id": "0MsPuiXBjCjtntMVA5EQn",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 26.831712042697305,
      "y": 50.74299099999996,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#f8f9fa",
      "width": 417.8464546966595,
      "height": 886.8816441194707,
      "seed": 521504920,
      "groupIds": [
        "iQGHOdmcZB-vPXmdrDGJ-",
        "5RXFIpuNfYv-oWr6v53Uk"
      ],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [],
      "updated": 1696244075398,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 824,
      "versionNonce": 414781416,
      "isDeleted": false,
      "id": "rg8xdfmenYAlYPG6Qooj8",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 65.88305218399583,
      "y": 84.18381305973534,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#a5d8ff",
      "width": 339.7437744140625,
      "height": 820,
      "seed": 696825240,
      "groupIds": [
        "iQGHOdmcZB-vPXmdrDGJ-",
        "5RXFIpuNfYv-oWr6v53Uk"
      ],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1696244075398,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 1,
      "text": "server {\n server_name youpi\n listen 0.0.0.0:8000\n\n root ./YoupiBanane\n index index.html\n\n allow_methods GET\n\n location /put_test {\n  allow_methods PUT\n  root ./YoupiBanane/put_here\n  alias\n }\n\n location /post_body {\n  allow_methods POST\n  client_body_buffer_size 100\n }\n\n location /directory {\n  alias\n  allow_methods GET\n  root YoupiBanane/\n  index youpi.bad_extension\n\n  location *.bla {\n   allow_methods GET POST\n   cgi_pass test_linux/ubuntu_cgi_tester\n  }\n }\n\n location *.bla {\n  allow_methods POST\n  cgi_pass test_linux/ubuntu_cgi_tester\n }\n}\n\nserver {\n ...\n}",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "server {\n server_name youpi\n listen 0.0.0.0:8000\n\n root ./YoupiBanane\n index index.html\n\n allow_methods GET\n\n location /put_test {\n  allow_methods PUT\n  root ./YoupiBanane/put_here\n  alias\n }\n\n location /post_body {\n  allow_methods POST\n  client_body_buffer_size 100\n }\n\n location /directory {\n  alias\n  allow_methods GET\n  root YoupiBanane/\n  index youpi.bad_extension\n\n  location *.bla {\n   allow_methods GET POST\n   cgi_pass test_linux/ubuntu_cgi_tester\n  }\n }\n\n location *.bla {\n  allow_methods POST\n  cgi_pass test_linux/ubuntu_cgi_tester\n }\n}\n\nserver {\n ...\n}",
      "lineHeight": 1.25,
      "baseline": 814
    },
    {
      "type": "text",
      "version": 644,
      "versionNonce": 2043390616,
      "isDeleted": false,
      "id": "m5jjN5msG7WMaxwqTQZop",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 145.38502015043755,
      "y": 7.521253100170352,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#a5d8ff",
      "width": 180.73983764648438,
      "height": 25,
      "seed": 923681432,
      "groupIds": [
        "5RXFIpuNfYv-oWr6v53Uk"
      ],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1696244115771,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "example_nginx.conf",
      "textAlign": "center",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "example_nginx.conf",
      "lineHeight": 1.25,
      "baseline": 18
    },
    {
      "type": "text",
      "version": 410,
      "versionNonce": 802838353,
      "isDeleted": false,
      "id": "Xch4Jvj9Vh3U4nRi6k1XC",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -865.6186418495627,
      "y": 1225.5413571001707,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#a5d8ff",
      "width": 75.73995971679688,
      "height": 35,
      "seed": 802662132,
      "groupIds": [
        "CTrH-1gf-4NbhPabY_TNH"
      ],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1696170885677,
      "link": null,
      "locked": false,
      "fontSize": 28,
      "fontFamily": 1,
      "text": "Client",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Client",
      "lineHeight": 1.25,
      "baseline": 25
    },
    {
      "type": "text",
      "version": 475,
      "versionNonce": 320225855,
      "isDeleted": false,
      "id": "LJweJLWp8hn_cAxms93CI",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -310.33869884956283,
      "y": 1225.5413571001707,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#a5d8ff",
      "width": 86.37995910644531,
      "height": 35,
      "seed": 1722693481,
      "groupIds": [
        "CTrH-1gf-4NbhPabY_TNH"
      ],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1696170885677,
      "link": null,
      "locked": false,
      "fontSize": 28,
      "fontFamily": 1,
      "text": "Server",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Server",
      "lineHeight": 1.25,
      "baseline": 25
    },
    {
      "type": "text",
      "version": 604,
      "versionNonce": 34948401,
      "isDeleted": false,
      "id": "oxoIichlwvyxKaRP2eRXn",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -620.5886288495626,
      "y": 1273.6988981001705,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#a5d8ff",
      "width": 146.27987670898438,
      "height": 25,
      "seed": 1949829196,
      "groupIds": [
        "CTrH-1gf-4NbhPabY_TNH"
      ],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1696170885677,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "HTTP Request",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "HTTP Request",
      "lineHeight": 1.25,
      "baseline": 18
    },
    {
      "type": "rectangle",
      "version": 278,
      "versionNonce": 1219600991,
      "isDeleted": false,
      "id": "_fQ5ii46ij4vhHlkKhQAX",
      "fillStyle": "hachure",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -903.963656011262,
      "y": 1273.69889784097,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#a5d8ff",
      "width": 152.4299885195967,
      "height": 166.61463023660374,
      "seed": 1618468084,
      "groupIds": [
        "CTrH-1gf-4NbhPabY_TNH"
      ],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [
        {
          "id": "tkAotrNMglJr9eo6Ee0dd",
          "type": "arrow"
        },
        {
          "id": "1lC-CMK3ilyn0z2GDDmJ2",
          "type": "arrow"
        }
      ],
      "updated": 1696170885677,
      "link": null,
      "locked": false
    },
    {
      "type": "rectangle",
      "version": 311,
      "versionNonce": 242710289,
      "isDeleted": false,
      "id": "VuKC5klrlKAulDL9gfxGC",
      "fillStyle": "hachure",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -343.3637130112617,
      "y": 1273.69889784097,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#a5d8ff",
      "width": 152.4299885195967,
      "height": 166.61463023660374,
      "seed": 1707200244,
      "groupIds": [
        "CTrH-1gf-4NbhPabY_TNH"
      ],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [
        {
          "id": "tkAotrNMglJr9eo6Ee0dd",
          "type": "arrow"
        },
        {
          "id": "1lC-CMK3ilyn0z2GDDmJ2",
          "type": "arrow"
        }
      ],
      "updated": 1696170885677,
      "link": null,
      "locked": false
    },
    {
      "type": "arrow",
      "version": 699,
      "versionNonce": 1345060479,
      "isDeleted": false,
      "id": "tkAotrNMglJr9eo6Ee0dd",
      "fillStyle": "hachure",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -749.9208977856485,
      "y": 1321.5497165679851,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#a5d8ff",
      "width": 404.9135463415814,
      "height": 0,
      "seed": 924936524,
      "groupIds": [
        "CTrH-1gf-4NbhPabY_TNH"
      ],
      "frameId": null,
      "roundness": {
        "type": 2
      },
      "boundElements": [],
      "updated": 1696170885677,
      "link": null,
      "locked": false,
      "startBinding": {
        "elementId": "_fQ5ii46ij4vhHlkKhQAX",
        "focus": -0.4256108403077945,
        "gap": 1.6127697060167066
      },
      "endBinding": {
        "elementId": "VuKC5klrlKAulDL9gfxGC",
        "focus": 0.4256108403077945,
        "gap": 1.6436384328054032
      },
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          404.9135463415814,
          0
        ]
      ]
    },
    {
      "type": "arrow",
      "version": 649,
      "versionNonce": 393768177,
      "isDeleted": false,
      "id": "1lC-CMK3ilyn0z2GDDmJ2",
      "fillStyle": "hachure",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -343.6667587404092,
      "y": 1370.3366031723149,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#a5d8ff",
      "width": 404.65063484970096,
      "height": 0,
      "seed": 1655267532,
      "groupIds": [
        "CTrH-1gf-4NbhPabY_TNH"
      ],
      "frameId": null,
      "roundness": {
        "type": 2
      },
      "boundElements": [],
      "updated": 1696170885677,
      "link": null,
      "locked": false,
      "startBinding": {
        "elementId": "VuKC5klrlKAulDL9gfxGC",
        "focus": -0.1600146421009133,
        "gap": 1
      },
      "endBinding": {
        "elementId": "_fQ5ii46ij4vhHlkKhQAX",
        "focus": 0.1600146421009133,
        "gap": 3.2162739015550414
      },
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          -404.65063484970096,
          0
        ]
      ]
    },
    {
      "type": "text",
      "version": 754,
      "versionNonce": 205903519,
      "isDeleted": false,
      "id": "-SOejz4AiqkwNhvj_Y449",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -624.3686198495627,
      "y": 1398.1421171001705,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#a5d8ff",
      "width": 153.83985900878906,
      "height": 25,
      "seed": 1206261196,
      "groupIds": [
        "CTrH-1gf-4NbhPabY_TNH"
      ],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1696170885677,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "HTTP Response",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "HTTP Response",
      "lineHeight": 1.25,
      "baseline": 18
    },
    {
      "type": "rectangle",
      "version": 348,
      "versionNonce": 614442705,
      "isDeleted": false,
      "id": "rRJXwWbsXq0mk-bHsS2AE",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -1043.1324100000002,
      "y": 32.52125299999989,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#a5d8ff",
      "width": 991.3674391627349,
      "height": 1117.1615038777832,
      "seed": 238202956,
      "groupIds": [
        "F37XUUDB1rnr_E0JpGfDJ"
      ],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [],
      "updated": 1696170885677,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 457,
      "versionNonce": 867150527,
      "isDeleted": false,
      "id": "iS-WchTizu9dazW3-yqzF",
      "fillStyle": "hachure",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -1011.9982509655079,
      "y": 78.60200493889147,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#a5d8ff",
      "width": 929.09912109375,
      "height": 1025,
      "seed": 818056692,
      "groupIds": [
        "F37XUUDB1rnr_E0JpGfDJ"
      ],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1696170885677,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "1. Understand Nginx's Architecture: Before you can start building a clone,\n  you need to thoroughly understand how Nginx works. Study Nginx's source\n  code and documentation to gain insight into its architecture, modules,\n  and key components.\n\n2. Set Up Your Development Environment:\n - Install a C++ development environment with a C++ compiler (e.g., GCC or Clang).\n - Ensure you have the necessary build tools and libraries.\n\n3. Create a Network Socket Listener: In C++, you can use libraries like\n  Boost.Asio or the standard socket library to create a network socket\n  listener that listens for incoming HTTP requests.\n\n4. Parse HTTP Requests: Implement an HTTP request parser to handle\n  incoming HTTP requests. You'll need to parse the request headers, method,\n  URL, and other relevant information.\n\n5. Implement Request Routing: Develop logic for routing incoming requests to\n  the appropriate handlers based on the requested URL. This might involve\n  creating a configuration system similar to Nginx's server blocks.\n\n6. Implement Response Handling: Write code to generate and send HTTP responses.\n  Handle static files, dynamic content generation, and error responses.\n\n7. Concurrency and Multi-Threading: Implement concurrency and multi-threading to\n  handle multiple incoming requests simultaneously, similar to Nginx's event-driven architecture.\n\n8. Load Balancing: If desired, implement load balancing logic for distributing\n  incoming requests among multiple backend servers.\n\n9. Error Handling and Logging: Create mechanisms for handling errors gracefully\n  and logging important information about the server's operation.\n\n10. Performance Optimization: Optimize your server for performance, considering\n  aspects like connection pooling, request/response buffering, and minimizing resource usage.\n\n11. Security: Implement security features such as request validation, access control,\n  and protection against common web vulnerabilities (e.g., SQL injection, XSS, CSRF).\n\n12. Configuration Management: Design and implement a configuration system to allow\n  users to configure your server's behavior, similar to Nginx's configuration files.",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "1. Understand Nginx's Architecture: Before you can start building a clone,\n  you need to thoroughly understand how Nginx works. Study Nginx's source\n  code and documentation to gain insight into its architecture, modules,\n  and key components.\n\n2. Set Up Your Development Environment:\n - Install a C++ development environment with a C++ compiler (e.g., GCC or Clang).\n - Ensure you have the necessary build tools and libraries.\n\n3. Create a Network Socket Listener: In C++, you can use libraries like\n  Boost.Asio or the standard socket library to create a network socket\n  listener that listens for incoming HTTP requests.\n\n4. Parse HTTP Requests: Implement an HTTP request parser to handle\n  incoming HTTP requests. You'll need to parse the request headers, method,\n  URL, and other relevant information.\n\n5. Implement Request Routing: Develop logic for routing incoming requests to\n  the appropriate handlers based on the requested URL. This might involve\n  creating a configuration system similar to Nginx's server blocks.\n\n6. Implement Response Handling: Write code to generate and send HTTP responses.\n  Handle static files, dynamic content generation, and error responses.\n\n7. Concurrency and Multi-Threading: Implement concurrency and multi-threading to\n  handle multiple incoming requests simultaneously, similar to Nginx's event-driven architecture.\n\n8. Load Balancing: If desired, implement load balancing logic for distributing\n  incoming requests among multiple backend servers.\n\n9. Error Handling and Logging: Create mechanisms for handling errors gracefully\n  and logging important information about the server's operation.\n\n10. Performance Optimization: Optimize your server for performance, considering\n  aspects like connection pooling, request/response buffering, and minimizing resource usage.\n\n11. Security: Implement security features such as request validation, access control,\n  and protection against common web vulnerabilities (e.g., SQL injection, XSS, CSRF).\n\n12. Configuration Management: Design and implement a configuration system to allow\n  users to configure your server's behavior, similar to Nginx's configuration files.",
      "lineHeight": 1.25,
      "baseline": 1018
    },
    {
      "type": "text",
      "version": 1115,
      "versionNonce": 1619305649,
      "isDeleted": false,
      "id": "sQOBGhtnfuB45OSOpfsbV",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -726.9286246835477,
      "y": -35.48930389982968,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#a5d8ff",
      "width": 358.9598693847656,
      "height": 35,
      "seed": 684341108,
      "groupIds": [
        "F37XUUDB1rnr_E0JpGfDJ"
      ],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1696170885677,
      "link": null,
      "locked": false,
      "fontSize": 28,
      "fontFamily": 1,
      "text": "Steps to create a server",
      "textAlign": "center",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Steps to create a server",
      "lineHeight": 1.25,
      "baseline": 25
    },
    {
      "type": "rectangle",
      "version": 806,
      "versionNonce": 2122735935,
      "isDeleted": false,
      "id": "iU36JJk17Ae8cV0E5sM9h",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 35.67358734147757,
      "y": 1065.7740258315332,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#f8f9fa",
      "width": 318.13312213388645,
      "height": 176.8403471684671,
      "seed": 122334847,
      "groupIds": [
        "-BreZ1YgdOgJGVQZC2xc2"
      ],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [],
      "updated": 1696170995262,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 1203,
      "versionNonce": 784720223,
      "isDeleted": false,
      "id": "zphos-v7zNez1Oq1QeVMw",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 60.630977482776245,
      "y": 1084.1941988912683,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#a5d8ff",
      "width": 264.9638671875,
      "height": 140,
      "seed": 1276020383,
      "groupIds": [
        "-BreZ1YgdOgJGVQZC2xc2"
      ],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1696170995262,
      "link": null,
      "locked": false,
      "fontSize": 28,
      "fontFamily": 1,
      "text": "server {\n server_name youpi\n ...\n}",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "server {\n server_name youpi\n ...\n}",
      "lineHeight": 1.25,
      "baseline": 130
    },
    {
      "type": "text",
      "version": 117,
      "versionNonce": 123755903,
      "isDeleted": false,
      "id": "BewwYM9Uc4Nd4jlD5J87d",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 126.13192401735222,
      "y": 1002.8216506003076,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 86.63990783691406,
      "height": 25,
      "seed": 1491338015,
      "groupIds": [
        "-BreZ1YgdOgJGVQZC2xc2"
      ],
      "frameId": null,
      "roundness": null,
      "boundElements": [
        {
          "id": "_7olmP_V5ogxJuiBPM9T2",
          "type": "arrow"
        }
      ],
      "updated": 1696170995262,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Directive",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Directive",
      "lineHeight": 1.25,
      "baseline": 18
    },
    {
      "type": "text",
      "version": 162,
      "versionNonce": 1117276607,
      "isDeleted": false,
      "id": "xl_9BmQ6BqVuIXsWzTqAZ",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 393.43820701735234,
      "y": 1179.292194600308,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 51.239959716796875,
      "height": 25,
      "seed": 1088269969,
      "groupIds": [
        "-BreZ1YgdOgJGVQZC2xc2"
      ],
      "frameId": null,
      "roundness": null,
      "boundElements": [
        {
          "id": "gDOrmOZnepag7xG7sbChR",
          "type": "arrow"
        }
      ],
      "updated": 1696170995262,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Value",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Value",
      "lineHeight": 1.25,
      "baseline": 18
    },
    {
      "type": "text",
      "version": 243,
      "versionNonce": 1165108735,
      "isDeleted": false,
      "id": "GdoMloWM6OzYJveE0wMk8",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 46.664125017352205,
      "y": 1271.5332796003079,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 60.47993469238281,
      "height": 25,
      "seed": 1543749439,
      "groupIds": [
        "-BreZ1YgdOgJGVQZC2xc2"
      ],
      "frameId": null,
      "roundness": null,
      "boundElements": [
        {
          "id": "gu1EtRqIj603TXb__frTQ",
          "type": "arrow"
        }
      ],
      "updated": 1696170995262,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Option",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Option",
      "lineHeight": 1.25,
      "baseline": 18
    },
    {
      "type": "arrow",
      "version": 195,
      "versionNonce": 1747969553,
      "isDeleted": false,
      "id": "_7olmP_V5ogxJuiBPM9T2",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 123.75983865909558,
      "y": 1032.9053382583677,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 31.496162956302896,
      "height": 56.051758932324674,
      "seed": 2030623167,
      "groupIds": [
        "-BreZ1YgdOgJGVQZC2xc2"
      ],
      "frameId": null,
      "roundness": {
        "type": 2
      },
      "boundElements": [],
      "updated": 1696170995697,
      "link": null,
      "locked": false,
      "startBinding": {
        "elementId": "BewwYM9Uc4Nd4jlD5J87d",
        "focus": 0.26469945862937255,
        "gap": 5.083687658059887
      },
      "endBinding": null,
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          -23.86948373551502,
          14.570857318124581
        ],
        [
          -31.496162956302896,
          56.051758932324674
        ]
      ]
    },
    {
      "type": "arrow",
      "version": 143,
      "versionNonce": 508230641,
      "isDeleted": false,
      "id": "gDOrmOZnepag7xG7sbChR",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 379.726648889734,
      "y": 1195.5717171312897,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 84.93708425764771,
      "height": 38.176729508602875,
      "seed": 863839903,
      "groupIds": [
        "-BreZ1YgdOgJGVQZC2xc2"
      ],
      "frameId": null,
      "roundness": {
        "type": 2
      },
      "boundElements": [],
      "updated": 1696170995697,
      "link": null,
      "locked": false,
      "startBinding": {
        "elementId": "xl_9BmQ6BqVuIXsWzTqAZ",
        "focus": -0.3604855578677194,
        "gap": 13.711558127618332
      },
      "endBinding": null,
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          -43.82812770014311,
          -1.05805729720214
        ],
        [
          -84.93708425764771,
          -38.176729508602875
        ]
      ]
    },
    {
      "type": "arrow",
      "version": 234,
      "versionNonce": 1883788753,
      "isDeleted": false,
      "id": "gu1EtRqIj603TXb__frTQ",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 120.70916013551727,
      "y": 1296.720463030171,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 48.39908650400196,
      "height": 140.04769881854372,
      "seed": 1409818719,
      "groupIds": [
        "-BreZ1YgdOgJGVQZC2xc2"
      ],
      "frameId": null,
      "roundness": {
        "type": 2
      },
      "boundElements": [],
      "updated": 1696170995697,
      "link": null,
      "locked": false,
      "startBinding": {
        "elementId": "GdoMloWM6OzYJveE0wMk8",
        "focus": 1.3520491251583282,
        "gap": 13.565100425782248
      },
      "endBinding": null,
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          47.4060293137951,
          -68.42480314377713
        ],
        [
          48.39908650400196,
          -140.04769881854372
        ]
      ]
    },
    {
      "type": "rectangle",
      "version": 617,
      "versionNonce": 1541652465,
      "isDeleted": false,
      "id": "l6K_hw3WtHQ4xoKMchbXG",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 497.1263163074366,
      "y": 872.3982203937035,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#a5d8ff",
      "width": 1005.0458196101151,
      "height": 554.5690728866509,
      "seed": 301661055,
      "groupIds": [
        "eRLo7StOIjekxxtpacc0p"
      ],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [],
      "updated": 1696171612011,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 448,
      "versionNonce": 103324113,
      "isDeleted": false,
      "id": "c_iylnJs0nXxwTSdpa3JN",
      "fillStyle": "hachure",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 525.0396374894472,
      "y": 899.682756837029,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffec99",
      "width": 949.2191772460938,
      "height": 500,
      "seed": 355283871,
      "groupIds": [
        "eRLo7StOIjekxxtpacc0p"
      ],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1696171612011,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Nginx est principalement conçu comme un serveur web hautement performant\net efficace pour servir des fichiers statiques et gérer des tâches de proxy\ninverse. Nginx ne prend pas en charge nativement l'exécution de scripts CGI\n(Common Gateway Interface) de la même manière que certains autres serveurs\nweb traditionnels comme Apache.\n\nCGI est un protocole qui permet à un serveur web d'exécuter des programmes\n(scripts) côté serveur en réponse à des demandes HTTP. Ces scripts peuvent\ngénérer dynamiquement du contenu web, effectuer des opérations sur le serveur,\nou interagir avec des bases de données, par exemple.\n\nPour prendre en charge l'exécution de scripts CGI avec Nginx, vous pouvez\nutiliser des passerelles CGI tierces comme FastCGI, uWSGI, ou des modules\nspécifiques tels que le module Nginx \"ngx_http_fastcgi_module\" ou \"ngx_http_uwsgi_module\".\nCes modules vous permettent de transférer les demandes CGI à un programme externe\nqui gère l'exécution des scripts et renvoie le résultat à Nginx pour qu'il soit renvoyé au client.\n\nEn résumé, Nginx ne prend pas en charge nativement les scripts CGI traditionnels,\nmais vous pouvez utiliser des passerelles CGI tierces ou des modules pour intégrer\nla prise en charge de CGI dans votre configuration Nginx si nécessaire.",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Nginx est principalement conçu comme un serveur web hautement performant\net efficace pour servir des fichiers statiques et gérer des tâches de proxy\ninverse. Nginx ne prend pas en charge nativement l'exécution de scripts CGI\n(Common Gateway Interface) de la même manière que certains autres serveurs\nweb traditionnels comme Apache.\n\nCGI est un protocole qui permet à un serveur web d'exécuter des programmes\n(scripts) côté serveur en réponse à des demandes HTTP. Ces scripts peuvent\ngénérer dynamiquement du contenu web, effectuer des opérations sur le serveur,\nou interagir avec des bases de données, par exemple.\n\nPour prendre en charge l'exécution de scripts CGI avec Nginx, vous pouvez\nutiliser des passerelles CGI tierces comme FastCGI, uWSGI, ou des modules\nspécifiques tels que le module Nginx \"ngx_http_fastcgi_module\" ou \"ngx_http_uwsgi_module\".\nCes modules vous permettent de transférer les demandes CGI à un programme externe\nqui gère l'exécution des scripts et renvoie le résultat à Nginx pour qu'il soit renvoyé au client.\n\nEn résumé, Nginx ne prend pas en charge nativement les scripts CGI traditionnels,\nmais vous pouvez utiliser des passerelles CGI tierces ou des modules pour intégrer\nla prise en charge de CGI dans votre configuration Nginx si nécessaire.",
      "lineHeight": 1.25,
      "baseline": 493
    },
    {
      "type": "rectangle",
      "version": 790,
      "versionNonce": 1836865695,
      "isDeleted": false,
      "id": "72R0zZFB0dOPOTh2YeCQP",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1554.6202853074367,
      "y": 872.3982203937035,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#a5d8ff",
      "width": 1106.125035032289,
      "height": 932.3180416550659,
      "seed": 11461417,
      "groupIds": [
        "tjqyNyZPBnsFGLJrR5zwk"
      ],
      "frameId": null,
      "roundness": {
        "type": 3
      },
      "boundElements": [],
      "updated": 1696171739441,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 616,
      "versionNonce": 2039104721,
      "isDeleted": false,
      "id": "tFNJl2Q8I7SoEkvwgsfgk",
      "fillStyle": "hachure",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1577.933291104831,
      "y": 901.0572412212364,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffec99",
      "width": 1059.4990234375,
      "height": 875,
      "seed": 646725673,
      "groupIds": [
        "tjqyNyZPBnsFGLJrR5zwk"
      ],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1696171739441,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Un serveur proxy inverse (reverse proxy en anglais) est un type de serveur proxy qui agit\nau nom des serveurs web situés en aval (serveurs d'origine). Il agit comme une interface\nentre les clients (utilisateurs) et les serveurs web en aval, servant de point de terminaison\npour les demandes des clients. Voici quelques-unes de ses principales fonctions et avantages :\n\n- Gestion du trafic : Le proxy inverse peut répartir équitablement le trafic entre plusieurs\n  serveurs en aval, ce qui permet d'équilibrer la charge (load balancing). Cela garantit une\n  distribution équilibrée des demandes client et améliore la disponibilité et la\n  performance du service.\n\n- Sécurité : Le proxy inverse peut servir de pare-feu, protégeant ainsi les serveurs en aval\n  contre les attaques malveillantes et les demandes non autorisées. Il peut également offrir\n  des fonctionnalités de sécurité telles que la validation SSL/TLS, l'authentification, la\n  protection contre les attaques DDoS, etc.\n\n- Gestion de la mise en cache : Le proxy inverse peut mettre en cache les réponses des serveurs\n  en aval. Cela permet de réduire la charge sur les serveurs en aval et d'accélérer la livraison\n  du contenu statique aux clients.\n\n- SSL/TLS termination : Le proxy inverse peut gérer le chiffrement SSL/TLS (SSL termination),\n  déchiffrant les demandes des clients, communiquant avec les serveurs en aval en texte clair\n  si nécessaire, puis réchiffrant les réponses avant de les renvoyer aux clients. Cela soulage\n  les serveurs en aval de la charge de gestion du chiffrement SSL/TLS.\n\n- Routage basé sur le chemin (Path-based routing) : Le proxy inverse peut acheminer les\n  demandes clients vers les serveurs en aval en fonction du chemin de l'URL demandée.\n  Par exemple, il peut diriger les demandes \"/app1\" vers un serveur et les demandes \"/app2\" vers un autre.\n\n- Fonctionnalités avancées : Les proxy inverses peuvent offrir de nombreuses autres fonctionnalités,\n  telles que la compression de contenu, la réécriture d'URL, la gestion des en-têtes HTTP,\n  la limitation de la bande passante, etc.\n\nNginx et Apache HTTP Server sont des exemples courants de serveurs proxy inverses utilisés\npour améliorer la disponibilité, la sécurité et les performances des applications web en acheminant\nle trafic vers les serveurs en aval.",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Un serveur proxy inverse (reverse proxy en anglais) est un type de serveur proxy qui agit\nau nom des serveurs web situés en aval (serveurs d'origine). Il agit comme une interface\nentre les clients (utilisateurs) et les serveurs web en aval, servant de point de terminaison\npour les demandes des clients. Voici quelques-unes de ses principales fonctions et avantages :\n\n- Gestion du trafic : Le proxy inverse peut répartir équitablement le trafic entre plusieurs\n  serveurs en aval, ce qui permet d'équilibrer la charge (load balancing). Cela garantit une\n  distribution équilibrée des demandes client et améliore la disponibilité et la\n  performance du service.\n\n- Sécurité : Le proxy inverse peut servir de pare-feu, protégeant ainsi les serveurs en aval\n  contre les attaques malveillantes et les demandes non autorisées. Il peut également offrir\n  des fonctionnalités de sécurité telles que la validation SSL/TLS, l'authentification, la\n  protection contre les attaques DDoS, etc.\n\n- Gestion de la mise en cache : Le proxy inverse peut mettre en cache les réponses des serveurs\n  en aval. Cela permet de réduire la charge sur les serveurs en aval et d'accélérer la livraison\n  du contenu statique aux clients.\n\n- SSL/TLS termination : Le proxy inverse peut gérer le chiffrement SSL/TLS (SSL termination),\n  déchiffrant les demandes des clients, communiquant avec les serveurs en aval en texte clair\n  si nécessaire, puis réchiffrant les réponses avant de les renvoyer aux clients. Cela soulage\n  les serveurs en aval de la charge de gestion du chiffrement SSL/TLS.\n\n- Routage basé sur le chemin (Path-based routing) : Le proxy inverse peut acheminer les\n  demandes clients vers les serveurs en aval en fonction du chemin de l'URL demandée.\n  Par exemple, il peut diriger les demandes \"/app1\" vers un serveur et les demandes \"/app2\" vers un autre.\n\n- Fonctionnalités avancées : Les proxy inverses peuvent offrir de nombreuses autres fonctionnalités,\n  telles que la compression de contenu, la réécriture d'URL, la gestion des en-têtes HTTP,\n  la limitation de la bande passante, etc.\n\nNginx et Apache HTTP Server sont des exemples courants de serveurs proxy inverses utilisés\npour améliorer la disponibilité, la sécurité et les performances des applications web en acheminant\nle trafic vers les serveurs en aval.",
      "lineHeight": 1.25,
      "baseline": 868
    }
  ],
  "appState": {
    "gridSize": null,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}